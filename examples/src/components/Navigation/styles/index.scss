@use '../../../styles/theme';
@use 'variants';

.navigation {
	padding: map-get(theme.$spacings, 'tight');
	min-height: 0;
	overflow-y: auto;
	@media screen and (min-width: map-get(theme.$breakpoints, 'lg')) {
		padding-right: map-get(theme.$spacings, 'loose');
		padding-left: map-get(theme.$spacings, 'loose');
	}

	&__list {
		& + & {
			margin-top: map-get(theme.$spacings, 'base');

			@media screen and (min-width: map-get(theme.$breakpoints, 'md')) {
				margin-top: map-get(theme.$spacings, 'looser');
			}
		}
	}

	&__item {
		&:hover {
			cursor: map-get(theme.$cursors, 'base');
		}

		& + & {
			margin-top: calc(map-get(theme.$spacings, 'tightest') + theme.$base-spacing);

			@media screen and (min-width: map-get(theme.$breakpoints, 'md')) {
				margin-top: map-get(theme.$spacings, 'tighter');
			}
		}
	}

	&__heading,
	&__link {
		font-size: map-get(theme.$type-scales, 'nav-base');
		letter-spacing: -0.1rem;
		line-height: 0.9;

		@media screen and (min-width: map-get(theme.$breakpoints, 'md')) {
			font-size: map-get(theme.$type-scales, 'nav-tablet');
		}
	}

	&__heading {
		font-weight: 700;
		color: white;
	}

	a.navigation__link {
		color: map-get(theme.$colors, 'ash-dark');
		transition: color map-get(theme.$durations, 'base') map-get(theme.$easings, 'base');

		&:focus,
		&:hover {
			color: map-get(theme.$colors, 'purple-base');
		}

		&--current {
			color: map-get(theme.$colors, 'brand-yellow');
		}

		&:focus {
			cursor: map-get(theme.$cursors, 'pointer-active');
		}

		&:hover {
			cursor: map-get(theme.$cursors, 'pointer-base');
		}

		&:active {
			color: map-get(theme.$colors, 'purple-dark');
			cursor: map-get(theme.$cursors, 'pointer-active');
		}
	}
}
