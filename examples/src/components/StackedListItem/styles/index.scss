@use '../../../styles/utils/shared/layout';
@use '../../../styles/utils/shared/typography';
@use 'props';
@use 'variants';

.stacked-list {
	position: relative;
	margin-top: -(map-get(theme.$border, 'thin'));

	@media screen and (min-width: map-get(theme.$breakpoints, 'md')) {
		margin-top: -(map-get(theme.$border, 'base'));
	}

	&::before {
		@include visible(false);
		@include position-cover;
		@include heading;
		@include heading-4;
		@include text-no-select;
		// stylelint-disable-next-line shopify/content-no-strings
		content: 'drop items here';
		display: flex;
		align-items: center;
		justify-content: center;
		text-align: center;
		width: 80%;
		height: 80%;
		background-color: white;
		transition: opacity map-get(theme.$durations, 'base') map-get(theme.$easings, 'base'),
			visibility map-get(theme.$durations, 'base') map-get(theme.$easings, 'base');
	}

	&:empty {
		&::before {
			@include visible;
		}
	}

	&__wrapper {
		@include stripes-bg;
		position: relative;
		color: map-get(theme.$colors, 'coal-dark');
		box-shadow: inset 0 0 0 map-get(theme.$border, 'thin') currentColor;
		// `draggable-container-parent--capacity` changes the `color` on `stacked-listWrapper`...
		// This is supposed to "trickle" down and cause all children to transition color as well...
		// Problem is, sometimes these transitions seem to collide and we don't get syncronised timing...
		// Sadly, there is no way to target `box-shadow`'s color without the use of currentColor.
		// transition: color map-get(theme.$durations, 'fast') map-get(theme.$easings, 'base');

		@media screen and (min-width: map-get(theme.$breakpoints, 'md')) {
			box-shadow: inset 0 0 0 map-get(theme.$border, 'base') currentColor;
		}
	}

	&__header,
	&__content {
		// cannot be `min-height`, as a child's `height: 100%` will not work
		// by using `height`, we will get visible scrollbars
		height: props.stacked-list-item();

		@media screen and (min-width: map-get(theme.$breakpoints, 'lg')) {
			height: props.stacked-list-item(base, desktop);
		}
	}

	&__header {
		padding: props.stacked-list-header(padding);
		background-color: currentColor;
		transition: color map-get(theme.$durations, 'fast') map-get(theme.$easings, 'base');

		@media screen and (min-width: map-get(theme.$breakpoints, 'md')) {
			padding: props.stacked-list-header(padding, tablet);
		}

		p {
			margin-top: 0.2em;
			font-size: 2rem;
			color: white;
		}
	}

	&__item {
		cursor: cursor: map-get(theme.$cursors, 'base');

		&:nth-child(1n + 2) {
			margin-top: -(map-get(theme.$border, 'thin'));

			@media screen and (min-width: map-get(theme.$breakpoints, 'md')) {
				margin-top: -(map-get(theme.$border, 'base'));
			}
		}

		.draggable--original:first-child + & {
			margin-top: 0;
		}
	}

	&__content {
		position: relative;
		display: flex;
		align-items: center;
		padding: map-get(theme.$spacings, 'tighter');
		color: currentColor;
		background-color: map-get(theme.$colors, 'ash-light');
		border: map-get(theme.$border, 'thin') solid currentColor;
		transition: color map-get(theme.$durations, 'fast') map-get(theme.$easings, 'base'),
			background-color map-get(theme.$durations, 'fast') map-get(theme.$easings, 'base'),
			transform map-get(theme.$durations, 'base') map-get(theme.$easings, 'bungie');

		@media screen and (min-width: map-get(theme.$breakpoints, 'md')) {
			border-width: map-get(theme.$border, 'base');
		}

		.heading {
			flex: 1 1 auto;
		}

		.drag-handle,
		.nope-handle {
			flex: 0 0 $handle-size;
			margin-left: map-get(theme.$spacings, 'tight');
		}

		// top border psuedo element... solution to create a collapsed border
		// required to make the hover style highlight each side of the element
		&::before {
			content: '';
			position: absolute;
			top: -(map-get(theme.$border, 'thin'));
			right: -(map-get(theme.$border, 'thin'));
			left: -(map-get(theme.$border, 'thin'));
			display: block;
			height: map-get(theme.$border, 'thin');
			background-color: currentColor;
			opacity: 0;
			transition: color map-get(theme.$durations, 'fast') map-get(theme.$easings, 'base'),
				opacity map-get(theme.$durations, 'fast') map-get(theme.$easings, 'base');

			@media screen and (min-width: map-get(theme.$breakpoints, 'md')) {
				top: -(map-get(theme.$border, 'base'));
				right: -(map-get(theme.$border, 'base'));
				left: -(map-get(theme.$border, 'base'));
				height: map-get(theme.$border, 'base');
			}
		}
	}
}
