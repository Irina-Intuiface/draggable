@use '../../../styles/utils/shared/layout';
@use 'props';
@use 'keyframes';

.hamburger {
	top: $hamburger-vertical-center;
	animation-name: hamburger-out;

	z-index: map-get(theme.$z-index, 'hamburger');
	position: absolute;
	top: map-get(theme.$spacings, 'base');
	left: 50%;
	margin-left: -$hamburger-offset;
	padding: map-get(theme.$spacings, 'tightest');
	// prevent the 'X' on page load
	opacity: 0;
	animation: FadeActivator map-get(theme.$durations, 'slow') map-get(theme.$easings, 'base')
		forwards;

	@media only screen and (min-width: map-get(theme.$breakpoints, 'md')) {
		@include layout.visually-hidden;
	}

	&-bun {
		position: relative;
		width: $hamburger-width;
		height: $hamburger-height;

		&::before,
		&::after {
			content: '';
			top: 0;
			display: block;
			transition: background-color map-get(theme.$durations, 'base') map-get(theme.$easings, 'base');
		}

		&::before,
		&::after,
		.hamburger-patty {
			position: absolute;
			left: 0;
			width: 100%;
			height: $hamburger-line-height;
			border-radius: $hamburger-line-height;
			background-color: map-get(theme.$colors, 'coal-dark');
			animation-duration: map-get(theme.$durations, 'base');
			animation-timing-function: map-get(theme.$easings, 'base');
			animation-fill-mode: both;
		}

		&::before {
			transform: translateY(0) rotate(0);
			animation-name: hamburger-before-out;
		}

		&::after {
			transform: translateY($hamburger-after-y) rotate(0);
			animation-name: hamburger-after-out;
		}
	}

	&__expanded {
		.hamburger-bun::before,
		.hamburger-bun::after {
			background-color: white;
		}

		.hamburger-bun::before {
			animation-name: hamburger-before-in;
		}

		.hamburger-bun::after {
			animation-name: hamburger-after-in;
		}

		.hamburger-patty {
			animation-name: hamburger-in;
		}
	}
}
